/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

buildscript {
    ext {
        kotlin_version = '1.3.11'
        dokka_version = '0.9.17'
        vertx_version = '3.6.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url 'https://dl.bintray.com/kotlin/kotlin-eap'
        }
    }

    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.2.0'
    }
}

// Hate to use two different strategies for managing plugins,
// but at least one of them did not work with the `buildscript` way.

plugins {
    id 'distribution'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.3.11'
    id 'org.jetbrains.dokka' version "0.9.17"
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'com.github.johnrengelman.shadow' version '4.0.3'
}

apply plugin: 'org.junit.platform.gradle.plugin'

sourceCompatibility = '1.8'

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

mainClassName = "app.MainKt"
//mainClassName = 'io.vertx.core.Launcher'
def mainVerticleName = 'app.MainVerticle'

// Enforce jvm >= 1.8 targets to properly support calling static functions
// on interfaces.
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

defaultTasks 'run'

repositories {
    mavenCentral()
    maven {
        url 'https://dl.bintray.com/kotlin/kotlin-eap'
    }
    maven { url 'http://dl.bintray.com/jetbrains/spek' }
}

dependencies {
    ext.spekVersion = '1.1.5'

    compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'

    compile "io.vertx:vertx-core:$vertx_version"
    compile "io.vertx:vertx-web:$vertx_version"

    testCompile 'org.jetbrains.kotlin:kotlin-reflect' // Required for the tests...

    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testCompile("org.jetbrains.spek:spek-api:$spekVersion") {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntime("org.jetbrains.spek:spek-junit-platform-engine:$spekVersion") {
        exclude group: 'org.junit.platform'
        exclude group: 'org.jetbrains.kotlin'
    }
    testCompile 'org.junit.platform:junit-platform-runner:1.0.3'
}

// Naming and packaging settings for the "shadow jar".
shadowJar {
    baseName = 'kotlin'
    classifier = 'playground'

    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

dokka {
    outputFormat = 'html'
    outputDirectory = '$buildDir/javadoc'
    linkMapping {
        dir = 'src/main/kotlin'
        url = 'http://localhost:12345'
    }
}